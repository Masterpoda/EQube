
Neo_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  0000049e  00000532  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000049e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  00800112  00800112  00000544  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000574  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001460  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000977  00000000  00000000  00001abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000844  00000000  00000000  00002433  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000394  00000000  00000000  00002c78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000535  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013d0  00000000  00000000  00003541  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004911  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e9       	ldi	r30, 0x9E	; 158
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 35       	cpi	r26, 0x5A	; 90
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 20 01 	call	0x240	; 0x240 <main>
  9e:	0c 94 4d 02 	jmp	0x49a	; 0x49a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ledsetup>:
		displayStrand();
		_delay_ms(100);
	}


}
  a6:	24 9a       	sbi	0x04, 4	; 4
  a8:	08 95       	ret

000000aa <displayStrand>:
  aa:	f8 94       	cli
  ac:	e4 e1       	ldi	r30, 0x14	; 20
  ae:	f1 e0       	ldi	r31, 0x01	; 1
  b0:	6c e5       	ldi	r22, 0x5C	; 92
  b2:	71 e0       	ldi	r23, 0x01	; 1
  b4:	48 e0       	ldi	r20, 0x08	; 8
  b6:	df 01       	movw	r26, r30
  b8:	12 97       	sbiw	r26, 0x02	; 2
  ba:	9c 91       	ld	r25, X
  bc:	11 96       	adiw	r26, 0x01	; 1
  be:	3c 91       	ld	r19, X
  c0:	80 81       	ld	r24, Z
  c2:	24 2f       	mov	r18, r20
  c4:	33 23       	and	r19, r19
  c6:	b4 f4       	brge	.+44     	; 0xf4 <displayStrand+0x4a>
  c8:	2c 9a       	sbi	0x05, 4	; 5
	...
  e2:	2c 98       	cbi	0x05, 4	; 5
	...
  f0:	00 00       	nop
  f2:	12 c0       	rjmp	.+36     	; 0x118 <displayStrand+0x6e>
  f4:	2c 9a       	sbi	0x05, 4	; 5
	...
  fe:	2c 98       	cbi	0x05, 4	; 5
	...
 118:	33 0f       	add	r19, r19
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	99 f6       	brne	.-90     	; 0xc4 <displayStrand+0x1a>
 11e:	24 2f       	mov	r18, r20
 120:	99 23       	and	r25, r25
 122:	b4 f4       	brge	.+44     	; 0x150 <displayStrand+0xa6>
 124:	2c 9a       	sbi	0x05, 4	; 5
	...
 13e:	2c 98       	cbi	0x05, 4	; 5
	...
 14c:	00 00       	nop
 14e:	12 c0       	rjmp	.+36     	; 0x174 <displayStrand+0xca>
 150:	2c 9a       	sbi	0x05, 4	; 5
	...
 15a:	2c 98       	cbi	0x05, 4	; 5
	...
 174:	99 0f       	add	r25, r25
 176:	21 50       	subi	r18, 0x01	; 1
 178:	99 f6       	brne	.-90     	; 0x120 <displayStrand+0x76>
 17a:	94 2f       	mov	r25, r20
 17c:	88 23       	and	r24, r24
 17e:	b4 f4       	brge	.+44     	; 0x1ac <displayStrand+0x102>
 180:	2c 9a       	sbi	0x05, 4	; 5
	...
 19a:	2c 98       	cbi	0x05, 4	; 5
	...
 1a8:	00 00       	nop
 1aa:	12 c0       	rjmp	.+36     	; 0x1d0 <displayStrand+0x126>
 1ac:	2c 9a       	sbi	0x05, 4	; 5
	...
 1b6:	2c 98       	cbi	0x05, 4	; 5
	...
 1d0:	88 0f       	add	r24, r24
 1d2:	91 50       	subi	r25, 0x01	; 1
 1d4:	99 f6       	brne	.-90     	; 0x17c <displayStrand+0xd2>
 1d6:	33 96       	adiw	r30, 0x03	; 3
 1d8:	e6 17       	cp	r30, r22
 1da:	f7 07       	cpc	r31, r23
 1dc:	09 f0       	breq	.+2      	; 0x1e0 <displayStrand+0x136>
 1de:	6b cf       	rjmp	.-298    	; 0xb6 <displayStrand+0xc>
 1e0:	78 94       	sei
 1e2:	80 e3       	ldi	r24, 0x30	; 48
 1e4:	8a 95       	dec	r24
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <displayStrand+0x13a>
 1e8:	08 95       	ret

000001ea <setStrand>:
 1ea:	e4 e1       	ldi	r30, 0x14	; 20
 1ec:	f1 e0       	ldi	r31, 0x01	; 1
 1ee:	2c e5       	ldi	r18, 0x5C	; 92
 1f0:	31 e0       	ldi	r19, 0x01	; 1
 1f2:	df 01       	movw	r26, r30
 1f4:	12 97       	sbiw	r26, 0x02	; 2
 1f6:	6c 93       	st	X, r22
 1f8:	11 96       	adiw	r26, 0x01	; 1
 1fa:	7c 93       	st	X, r23
 1fc:	80 83       	st	Z, r24
 1fe:	33 96       	adiw	r30, 0x03	; 3
 200:	e2 17       	cp	r30, r18
 202:	f3 07       	cpc	r31, r19
 204:	b1 f7       	brne	.-20     	; 0x1f2 <setStrand+0x8>
 206:	08 95       	ret

00000208 <Map7Linear>:

void Map7Linear( int array[]) //adjust strands brightness according to 7 element array using linear interpolation.7
{
 208:	fc 01       	movw	r30, r24
	STRAND[0].r = array[0];
 20a:	a2 e1       	ldi	r26, 0x12	; 18
 20c:	b1 e0       	ldi	r27, 0x01	; 1
 20e:	80 81       	ld	r24, Z
 210:	8c 93       	st	X, r24
	STRAND[4].r = array[1];
 212:	82 81       	ldd	r24, Z+2	; 0x02
 214:	1c 96       	adiw	r26, 0x0c	; 12
 216:	8c 93       	st	X, r24
 218:	1c 97       	sbiw	r26, 0x0c	; 12
	STRAND[8].r = array[2];
 21a:	84 81       	ldd	r24, Z+4	; 0x04
 21c:	58 96       	adiw	r26, 0x18	; 24
 21e:	8c 93       	st	X, r24
 220:	58 97       	sbiw	r26, 0x18	; 24
	STRAND[12].r = array[3];
 222:	86 81       	ldd	r24, Z+6	; 0x06
 224:	94 96       	adiw	r26, 0x24	; 36
 226:	8c 93       	st	X, r24
 228:	94 97       	sbiw	r26, 0x24	; 36
	STRAND[15].r = array[4];
 22a:	80 85       	ldd	r24, Z+8	; 0x08
 22c:	9d 96       	adiw	r26, 0x2d	; 45
 22e:	8c 93       	st	X, r24
 230:	9d 97       	sbiw	r26, 0x2d	; 45
	STRAND[19].r = array[5];
 232:	82 85       	ldd	r24, Z+10	; 0x0a
 234:	d9 96       	adiw	r26, 0x39	; 57
 236:	8c 93       	st	X, r24
	STRAND[23].r = array[6];
 238:	84 85       	ldd	r24, Z+12	; 0x0c
 23a:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <__data_end+0x45>
 23e:	08 95       	ret

00000240 <main>:

#include "NeoPixel.h"
#include <stdlib.h>

int main()
{
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	2e 97       	sbiw	r28, 0x0e	; 14
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	f8 94       	cli
 24e:	de bf       	out	0x3e, r29	; 62
 250:	0f be       	out	0x3f, r0	; 63
 252:	cd bf       	out	0x3d, r28	; 61

	pixel.r = 10;
	pixel.g = 0;
	pixel.b = 0;

	ledsetup();
 254:	0e 94 53 00 	call	0xa6	; 0xa6 <ledsetup>
	int seven[7] = {1,5,3,2,6,0,4};
 258:	8e e0       	ldi	r24, 0x0E	; 14
 25a:	e4 e0       	ldi	r30, 0x04	; 4
 25c:	f1 e0       	ldi	r31, 0x01	; 1
 25e:	de 01       	movw	r26, r28
 260:	11 96       	adiw	r26, 0x01	; 1
 262:	01 90       	ld	r0, Z+
 264:	0d 92       	st	X+, r0
 266:	8a 95       	dec	r24
 268:	e1 f7       	brne	.-8      	; 0x262 <main+0x22>
	setStrand(pixel);
 26a:	6a e0       	ldi	r22, 0x0A	; 10
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	0e 94 f5 00 	call	0x1ea	; 0x1ea <setStrand>
	Map7Linear(seven);
 274:	ce 01       	movw	r24, r28
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	0e 94 04 01 	call	0x208	; 0x208 <Map7Linear>
 27c:	6e 01       	movw	r12, r28
 27e:	2f e0       	ldi	r18, 0x0F	; 15
 280:	c2 0e       	add	r12, r18
 282:	d1 1c       	adc	r13, r1
		//colorwipe();

		int k = 0;
		for(k = 0; k < 7; k++)
		{
			seven[k] = rand()%10;
 284:	0f 2e       	mov	r0, r31
 286:	fa e0       	ldi	r31, 0x0A	; 10
 288:	ef 2e       	mov	r14, r31
 28a:	f1 2c       	mov	r15, r1
 28c:	f0 2d       	mov	r31, r0
 28e:	8e 01       	movw	r16, r28
 290:	0f 5f       	subi	r16, 0xFF	; 255
 292:	1f 4f       	sbci	r17, 0xFF	; 255
 294:	0e 94 da 01 	call	0x3b4	; 0x3b4 <rand>
 298:	b7 01       	movw	r22, r14
 29a:	0e 94 66 01 	call	0x2cc	; 0x2cc <__divmodhi4>
 29e:	f8 01       	movw	r30, r16
 2a0:	81 93       	st	Z+, r24
 2a2:	91 93       	st	Z+, r25
 2a4:	8f 01       	movw	r16, r30
	while (1)
	{
		//colorwipe();

		int k = 0;
		for(k = 0; k < 7; k++)
 2a6:	ec 15       	cp	r30, r12
 2a8:	fd 05       	cpc	r31, r13
 2aa:	a1 f7       	brne	.-24     	; 0x294 <main+0x54>
		{
			seven[k] = rand()%10;
		}
		Map7Linear(seven);
 2ac:	ce 01       	movw	r24, r28
 2ae:	01 96       	adiw	r24, 0x01	; 1
 2b0:	0e 94 04 01 	call	0x208	; 0x208 <Map7Linear>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b4:	ff ef       	ldi	r31, 0xFF	; 255
 2b6:	29 e6       	ldi	r18, 0x69	; 105
 2b8:	88 e1       	ldi	r24, 0x18	; 24
 2ba:	f1 50       	subi	r31, 0x01	; 1
 2bc:	20 40       	sbci	r18, 0x00	; 0
 2be:	80 40       	sbci	r24, 0x00	; 0
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0x7a>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0x84>
 2c4:	00 00       	nop
		_delay_ms(500);
		displayStrand();
 2c6:	0e 94 55 00 	call	0xaa	; 0xaa <displayStrand>

	}
 2ca:	e1 cf       	rjmp	.-62     	; 0x28e <main+0x4e>

000002cc <__divmodhi4>:
 2cc:	97 fb       	bst	r25, 7
 2ce:	07 2e       	mov	r0, r23
 2d0:	16 f4       	brtc	.+4      	; 0x2d6 <__divmodhi4+0xa>
 2d2:	00 94       	com	r0
 2d4:	07 d0       	rcall	.+14     	; 0x2e4 <__divmodhi4_neg1>
 2d6:	77 fd       	sbrc	r23, 7
 2d8:	09 d0       	rcall	.+18     	; 0x2ec <__divmodhi4_neg2>
 2da:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__udivmodhi4>
 2de:	07 fc       	sbrc	r0, 7
 2e0:	05 d0       	rcall	.+10     	; 0x2ec <__divmodhi4_neg2>
 2e2:	3e f4       	brtc	.+14     	; 0x2f2 <__divmodhi4_exit>

000002e4 <__divmodhi4_neg1>:
 2e4:	90 95       	com	r25
 2e6:	81 95       	neg	r24
 2e8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ea:	08 95       	ret

000002ec <__divmodhi4_neg2>:
 2ec:	70 95       	com	r23
 2ee:	61 95       	neg	r22
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255

000002f2 <__divmodhi4_exit>:
 2f2:	08 95       	ret

000002f4 <__udivmodhi4>:
 2f4:	aa 1b       	sub	r26, r26
 2f6:	bb 1b       	sub	r27, r27
 2f8:	51 e1       	ldi	r21, 0x11	; 17
 2fa:	07 c0       	rjmp	.+14     	; 0x30a <__udivmodhi4_ep>

000002fc <__udivmodhi4_loop>:
 2fc:	aa 1f       	adc	r26, r26
 2fe:	bb 1f       	adc	r27, r27
 300:	a6 17       	cp	r26, r22
 302:	b7 07       	cpc	r27, r23
 304:	10 f0       	brcs	.+4      	; 0x30a <__udivmodhi4_ep>
 306:	a6 1b       	sub	r26, r22
 308:	b7 0b       	sbc	r27, r23

0000030a <__udivmodhi4_ep>:
 30a:	88 1f       	adc	r24, r24
 30c:	99 1f       	adc	r25, r25
 30e:	5a 95       	dec	r21
 310:	a9 f7       	brne	.-22     	; 0x2fc <__udivmodhi4_loop>
 312:	80 95       	com	r24
 314:	90 95       	com	r25
 316:	bc 01       	movw	r22, r24
 318:	cd 01       	movw	r24, r26
 31a:	08 95       	ret

0000031c <do_rand>:
 31c:	8f 92       	push	r8
 31e:	9f 92       	push	r9
 320:	af 92       	push	r10
 322:	bf 92       	push	r11
 324:	cf 92       	push	r12
 326:	df 92       	push	r13
 328:	ef 92       	push	r14
 32a:	ff 92       	push	r15
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	ec 01       	movw	r28, r24
 332:	68 81       	ld	r22, Y
 334:	79 81       	ldd	r23, Y+1	; 0x01
 336:	8a 81       	ldd	r24, Y+2	; 0x02
 338:	9b 81       	ldd	r25, Y+3	; 0x03
 33a:	61 15       	cp	r22, r1
 33c:	71 05       	cpc	r23, r1
 33e:	81 05       	cpc	r24, r1
 340:	91 05       	cpc	r25, r1
 342:	21 f4       	brne	.+8      	; 0x34c <do_rand+0x30>
 344:	64 e2       	ldi	r22, 0x24	; 36
 346:	79 ed       	ldi	r23, 0xD9	; 217
 348:	8b e5       	ldi	r24, 0x5B	; 91
 34a:	97 e0       	ldi	r25, 0x07	; 7
 34c:	2d e1       	ldi	r18, 0x1D	; 29
 34e:	33 ef       	ldi	r19, 0xF3	; 243
 350:	41 e0       	ldi	r20, 0x01	; 1
 352:	50 e0       	ldi	r21, 0x00	; 0
 354:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__divmodsi4>
 358:	49 01       	movw	r8, r18
 35a:	5a 01       	movw	r10, r20
 35c:	9b 01       	movw	r18, r22
 35e:	ac 01       	movw	r20, r24
 360:	a7 ea       	ldi	r26, 0xA7	; 167
 362:	b1 e4       	ldi	r27, 0x41	; 65
 364:	0e 94 09 02 	call	0x412	; 0x412 <__muluhisi3>
 368:	6b 01       	movw	r12, r22
 36a:	7c 01       	movw	r14, r24
 36c:	ac ee       	ldi	r26, 0xEC	; 236
 36e:	b4 ef       	ldi	r27, 0xF4	; 244
 370:	a5 01       	movw	r20, r10
 372:	94 01       	movw	r18, r8
 374:	0e 94 17 02 	call	0x42e	; 0x42e <__mulohisi3>
 378:	dc 01       	movw	r26, r24
 37a:	cb 01       	movw	r24, r22
 37c:	8c 0d       	add	r24, r12
 37e:	9d 1d       	adc	r25, r13
 380:	ae 1d       	adc	r26, r14
 382:	bf 1d       	adc	r27, r15
 384:	b7 ff       	sbrs	r27, 7
 386:	03 c0       	rjmp	.+6      	; 0x38e <do_rand+0x72>
 388:	01 97       	sbiw	r24, 0x01	; 1
 38a:	a1 09       	sbc	r26, r1
 38c:	b0 48       	sbci	r27, 0x80	; 128
 38e:	88 83       	st	Y, r24
 390:	99 83       	std	Y+1, r25	; 0x01
 392:	aa 83       	std	Y+2, r26	; 0x02
 394:	bb 83       	std	Y+3, r27	; 0x03
 396:	9f 77       	andi	r25, 0x7F	; 127
 398:	df 91       	pop	r29
 39a:	cf 91       	pop	r28
 39c:	ff 90       	pop	r15
 39e:	ef 90       	pop	r14
 3a0:	df 90       	pop	r13
 3a2:	cf 90       	pop	r12
 3a4:	bf 90       	pop	r11
 3a6:	af 90       	pop	r10
 3a8:	9f 90       	pop	r9
 3aa:	8f 90       	pop	r8
 3ac:	08 95       	ret

000003ae <rand_r>:
 3ae:	0e 94 8e 01 	call	0x31c	; 0x31c <do_rand>
 3b2:	08 95       	ret

000003b4 <rand>:
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	0e 94 8e 01 	call	0x31c	; 0x31c <do_rand>
 3bc:	08 95       	ret

000003be <srand>:
 3be:	a0 e0       	ldi	r26, 0x00	; 0
 3c0:	b0 e0       	ldi	r27, 0x00	; 0
 3c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 3c6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 3ca:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 3ce:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 3d2:	08 95       	ret

000003d4 <__divmodsi4>:
 3d4:	05 2e       	mov	r0, r21
 3d6:	97 fb       	bst	r25, 7
 3d8:	1e f4       	brtc	.+6      	; 0x3e0 <__divmodsi4+0xc>
 3da:	00 94       	com	r0
 3dc:	0e 94 01 02 	call	0x402	; 0x402 <__negsi2>
 3e0:	57 fd       	sbrc	r21, 7
 3e2:	07 d0       	rcall	.+14     	; 0x3f2 <__divmodsi4_neg2>
 3e4:	0e 94 1c 02 	call	0x438	; 0x438 <__udivmodsi4>
 3e8:	07 fc       	sbrc	r0, 7
 3ea:	03 d0       	rcall	.+6      	; 0x3f2 <__divmodsi4_neg2>
 3ec:	4e f4       	brtc	.+18     	; 0x400 <__divmodsi4_exit>
 3ee:	0c 94 01 02 	jmp	0x402	; 0x402 <__negsi2>

000003f2 <__divmodsi4_neg2>:
 3f2:	50 95       	com	r21
 3f4:	40 95       	com	r20
 3f6:	30 95       	com	r19
 3f8:	21 95       	neg	r18
 3fa:	3f 4f       	sbci	r19, 0xFF	; 255
 3fc:	4f 4f       	sbci	r20, 0xFF	; 255
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255

00000400 <__divmodsi4_exit>:
 400:	08 95       	ret

00000402 <__negsi2>:
 402:	90 95       	com	r25
 404:	80 95       	com	r24
 406:	70 95       	com	r23
 408:	61 95       	neg	r22
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	8f 4f       	sbci	r24, 0xFF	; 255
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	08 95       	ret

00000412 <__muluhisi3>:
 412:	0e 94 3e 02 	call	0x47c	; 0x47c <__umulhisi3>
 416:	a5 9f       	mul	r26, r21
 418:	90 0d       	add	r25, r0
 41a:	b4 9f       	mul	r27, r20
 41c:	90 0d       	add	r25, r0
 41e:	a4 9f       	mul	r26, r20
 420:	80 0d       	add	r24, r0
 422:	91 1d       	adc	r25, r1
 424:	11 24       	eor	r1, r1
 426:	08 95       	ret

00000428 <__mulshisi3>:
 428:	b7 ff       	sbrs	r27, 7
 42a:	0c 94 09 02 	jmp	0x412	; 0x412 <__muluhisi3>

0000042e <__mulohisi3>:
 42e:	0e 94 09 02 	call	0x412	; 0x412 <__muluhisi3>
 432:	82 1b       	sub	r24, r18
 434:	93 0b       	sbc	r25, r19
 436:	08 95       	ret

00000438 <__udivmodsi4>:
 438:	a1 e2       	ldi	r26, 0x21	; 33
 43a:	1a 2e       	mov	r1, r26
 43c:	aa 1b       	sub	r26, r26
 43e:	bb 1b       	sub	r27, r27
 440:	fd 01       	movw	r30, r26
 442:	0d c0       	rjmp	.+26     	; 0x45e <__udivmodsi4_ep>

00000444 <__udivmodsi4_loop>:
 444:	aa 1f       	adc	r26, r26
 446:	bb 1f       	adc	r27, r27
 448:	ee 1f       	adc	r30, r30
 44a:	ff 1f       	adc	r31, r31
 44c:	a2 17       	cp	r26, r18
 44e:	b3 07       	cpc	r27, r19
 450:	e4 07       	cpc	r30, r20
 452:	f5 07       	cpc	r31, r21
 454:	20 f0       	brcs	.+8      	; 0x45e <__udivmodsi4_ep>
 456:	a2 1b       	sub	r26, r18
 458:	b3 0b       	sbc	r27, r19
 45a:	e4 0b       	sbc	r30, r20
 45c:	f5 0b       	sbc	r31, r21

0000045e <__udivmodsi4_ep>:
 45e:	66 1f       	adc	r22, r22
 460:	77 1f       	adc	r23, r23
 462:	88 1f       	adc	r24, r24
 464:	99 1f       	adc	r25, r25
 466:	1a 94       	dec	r1
 468:	69 f7       	brne	.-38     	; 0x444 <__udivmodsi4_loop>
 46a:	60 95       	com	r22
 46c:	70 95       	com	r23
 46e:	80 95       	com	r24
 470:	90 95       	com	r25
 472:	9b 01       	movw	r18, r22
 474:	ac 01       	movw	r20, r24
 476:	bd 01       	movw	r22, r26
 478:	cf 01       	movw	r24, r30
 47a:	08 95       	ret

0000047c <__umulhisi3>:
 47c:	a2 9f       	mul	r26, r18
 47e:	b0 01       	movw	r22, r0
 480:	b3 9f       	mul	r27, r19
 482:	c0 01       	movw	r24, r0
 484:	a3 9f       	mul	r26, r19
 486:	70 0d       	add	r23, r0
 488:	81 1d       	adc	r24, r1
 48a:	11 24       	eor	r1, r1
 48c:	91 1d       	adc	r25, r1
 48e:	b2 9f       	mul	r27, r18
 490:	70 0d       	add	r23, r0
 492:	81 1d       	adc	r24, r1
 494:	11 24       	eor	r1, r1
 496:	91 1d       	adc	r25, r1
 498:	08 95       	ret

0000049a <_exit>:
 49a:	f8 94       	cli

0000049c <__stop_program>:
 49c:	ff cf       	rjmp	.-2      	; 0x49c <__stop_program>
